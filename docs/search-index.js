var searchIndex = new Map(JSON.parse('[\
["chuffed_rs",{"t":"CCFHHHFFFHISSSSFFFHFHHHIIHHFSSHFHHHHHHHHHHHFISSSSSFFFUFFFISSSSSSSSFISSSSSSSSSSSSSSSSISSSSSFFOOOOOOOOOOOHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHONNOONNNHNONNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNHNOOONHNNNNNNNNNNNNNNNNNNNNNNONHOOOONNNNNHHHHOHHHNNOOOOOOOOOONNNNNNNNNOOONHNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOHFOONOHHHHHHH","n":["bindings","wrappers","BoolView","BoolView_attach","BoolView_detach","BoolView_getScore","Branching","Branching__bindgen_vtable","Clause","Clause_debug","ConLevel","ConLevel_CL_BND","ConLevel_CL_DEF","ConLevel_CL_DOM","ConLevel_CL_VAL","DecInfo","DummyProblem","IntVar","IntVar_IntVar","IntVar_PropInfo","IntVar_allowSet","IntVar_attach","IntVar_branch","IntVar_const_iterator","IntVar_const_reverse_iterator","IntVar_getScore","IntVar_initVals","IntVar_iterator","IntVar_max_limit","IntVar_min_limit","IntVar_remVal","IntVar_reverse_iterator","IntVar_setMax","IntVar_setMin","IntVar_setVal","IntVar_simplifyWatches","IntVar_specialiseToEL","IntVar_specialiseToLL","IntVar_specialiseToSL","IntVar_updateFixed","IntVar_updateMax","IntVar_updateMin","IntVar_wakePropagators","Lit","PreferredVal","PreferredVal_PV_MAX","PreferredVal_PV_MEDIAN","PreferredVal_PV_MIN","PreferredVal_PV_SPLIT_MAX","PreferredVal_PV_SPLIT_MIN","Propagator","Propagator__bindgen_vtable","Reason","Reason__bindgen_ty_1","Reason__bindgen_ty_1__bindgen_ty_1","Tchar","Tint","ValBranch","ValBranch_VAL_DEFAULT","ValBranch_VAL_MAX","ValBranch_VAL_MEDIAN","ValBranch_VAL_MIDDLE","ValBranch_VAL_MIN","ValBranch_VAL_RANDOM","ValBranch_VAL_SPLIT_MAX","ValBranch_VAL_SPLIT_MIN","Var","VarBranch","VarBranch_VAR_ACTIVITY","VarBranch_VAR_DEFAULT","VarBranch_VAR_DEGREE_MAX","VarBranch_VAR_DEGREE_MIN","VarBranch_VAR_INORDER","VarBranch_VAR_MAX_MAX","VarBranch_VAR_MAX_MIN","VarBranch_VAR_MIN_MAX","VarBranch_VAR_MIN_MIN","VarBranch_VAR_PSEUDO_COST","VarBranch_VAR_RANDOM","VarBranch_VAR_REDUCED_COST","VarBranch_VAR_REGRET_MAX_MAX","VarBranch_VAR_REGRET_MIN_MAX","VarBranch_VAR_SIZE_MAX","VarBranch_VAR_SIZE_MIN","VarType","VarType_BOOL_VAR","VarType_INT_VAR","VarType_INT_VAR_EL","VarType_INT_VAR_LL","VarType_INT_VAR_SL","__BindgenBitfieldUnit","__IncompleteArrayField","__bindgen_anon_1","_base","_base","_base","_bitfield_1","_bitfield_1","_bitfield_align_1","_bitfield_align_1","_phantom_0","a","activity","all_different","all_in_scip","as_mut_ptr","as_mut_slice","as_ptr","as_slice","attach","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branch","branch_IntVar","callback","cap","changes","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","cmp","createVar","createVars","createVars1","createVars2","createVars3","d","d1","d2","data","data","debug","default","default","destroy_vec_intvar","detach","eflags","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forward","forward","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","get_bit","get_idx","hash","in_queue","in_queue","in_scip","initVals","int_plus","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","last_solution_value","learnt","make_vec_intvar","max","max0","min","min0","new","new","new","new_bitfield_1","new_bitfield_1","new_dummy_problem","new_xyz_problem","output_vars","output_vars1","p","p_addVars","p_print","p_setcallback","padding","partial_cmp","pinfo","pos","preferred_val","priority","prop_id","pt","s","satisfied","sbps_value_selection","searchVars","set","set_bit","set_d1","set_d2","set_learnt","set_padding","set_sz","set_temp_expl","set_type","shadow_val","should_be_decidable","should_be_learnable","simplifyWatches","solve_xyz","specialiseToEL","specialiseToLL","specialiseToSL","sz","sz","temp_expl","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","updateFixed","updateMax","updateMin","v","v","v","val","val","val","vals","var","var","var","var_id","var_sym_break","vec","vtable_","vtable_","wakePropagators","x","all_different_wrapper","branch_wrapper","create_var","create_vars","int_plus_wrapper","output_vars_wrapper","var_sym_break_wrapper"],"q":[[0,"chuffed_rs"],[2,"chuffed_rs::bindings"],[442,"chuffed_rs::wrappers"],[449,"std::os::raw"],[450,"core::clone"],[451,"core::cmp"],[452,"core::default"],[453,"core::fmt"],[454,"core::convert"],[455,"core::hash"],[456,"core::option"],[457,"core::result"],[458,"core::any"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,35,6,36,27,19,27,19,34,18,36,0,36,2,2,2,2,6,52,53,10,2,34,12,13,14,15,16,27,17,18,19,7,35,6,36,20,21,22,23,52,53,10,2,34,12,13,14,15,16,27,17,18,19,7,35,6,36,20,21,22,23,0,0,23,34,36,10,12,13,14,15,16,17,18,19,20,21,22,23,10,12,13,14,15,16,17,18,19,20,21,22,23,10,12,13,14,15,16,17,18,19,20,21,22,23,10,0,0,0,0,0,18,19,19,34,27,27,10,2,0,6,20,10,10,2,34,12,13,14,15,16,27,19,7,35,6,36,20,21,22,23,54,22,52,53,10,2,34,12,13,14,15,16,27,17,18,19,7,35,6,36,20,21,22,23,10,10,0,10,7,36,36,36,0,52,53,10,2,34,12,13,14,15,16,27,17,18,19,7,35,6,36,20,21,22,23,36,27,0,36,36,36,36,10,2,36,27,19,0,0,0,0,20,0,0,0,27,10,36,20,36,7,7,18,6,7,36,23,10,10,19,19,27,27,27,27,19,36,36,36,36,0,36,36,36,27,34,27,10,12,13,14,15,16,17,18,19,20,21,22,23,52,53,10,2,34,12,13,14,15,16,27,17,18,19,7,35,6,36,20,21,22,23,52,53,10,2,34,12,13,14,15,16,27,17,18,19,7,35,6,36,20,21,22,23,19,14,52,53,10,2,34,12,13,14,15,16,27,17,18,19,7,35,6,36,20,21,22,23,36,36,36,12,13,6,55,14,21,36,55,14,21,36,0,0,15,7,36,16,0,0,0,0,0,0,0],"f":"`````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{b{d{c}}}}}{}{}}{{{f{b{d{c}}}}h}{{f{b{j{c}}}}}{}}{{{f{{d{c}}}}}{}{}}{{{f{{d{c}}}}h}{{f{{j{c}}}}}{}}{{{f{l}}nA`A`}Ab}{f{{f{c}}}{}}000000000000000000000{{{f{b}}}{{f{bc}}}{}}000000000000000000000`````{{{f{{Ad{c}}}}}{{Ad{c}}}Af}{{{f{Ah}}}Ah}{{{f{Aj}}}Aj}{{{f{Al}}}Al}{{{f{An}}}An}{{{f{B`}}}B`}{{{f{Bb}}}Bb}{{{f{Bd}}}Bd}{{{f{Bf}}}Bf}{{{f{Bh}}}Bh}{{{f{Bj}}}Bj}{{{f{Bl}}}Bl}{{{f{Bn}}}Bn}{{f{f{bc}}}Ab{}}000000000000{fAb}000000000000{{{f{{Ad{c}}}}{f{{Ad{c}}}}}C`Cb}``````{{{f{Bf}}}Cd}0``{{{f{Cf}}}Ab}{{}{{Ad{c}}}Ch}{{}{{d{c}}}Ch}`{{{f{bl}}nA`A`}Ab}`{{{f{{Ad{c}}}}{f{{Ad{c}}}}}CjCl}{{{f{{Ad{c}}}}{f{bCn}}}D`Db}{{{f{{d{c}}}}{f{bCn}}}D`{}}{{{f{{Dd{c}}}}{f{bCn}}}D`Db}{{{f{Ah}}{f{bCn}}}D`}{{{f{Aj}}{f{bCn}}}D`}{{{f{Al}}{f{bCn}}}D`}{{{f{An}}{f{bCn}}}D`}{{{f{B`}}{f{bCn}}}D`}{{{f{Cf}}{f{bCn}}}D`}{{{f{Bf}}{f{bCn}}}D`}{{{f{n}}{f{bCn}}}D`}{{{f{Df}}{f{bCn}}}D`}{{{f{l}}{f{bCn}}}D`}{{{f{Dh}}{f{bCn}}}D`}{{{f{Bh}}{f{bCn}}}D`}{{{f{Bj}}{f{bCn}}}D`}{{{f{Bl}}{f{bCn}}}D`}{{{f{Bn}}{f{bCn}}}D`}``{cc{}}000000000000000000000{{{f{{Ad{c}}}}hDj}Dl{{Dn{{j{Dj}}}}{E`{{j{Dj}}}}}}{{{f{{Ad{c}}}}h}Cj{{Dn{{j{Dj}}}}{E`{{j{Dj}}}}}}`{{{f{{Ad{c}}}}{f{be}}}AbEbEd}```{{{f{bDh}}Cj}Ab}`{{}c{}}000000000000000000000`{{{f{Cf}}}Cd}`````{c{{Ad{c}}}{}}{{}{{d{c}}}{}}{{A`A`}Dh}{{CdCdCdCd}{{Ad{{Ef{Dj}}}}}}{{CdCdCd}{{Ad{{Ef{Dj}}}}}}````````5{{{f{{Ad{c}}}}{f{{Ad{c}}}}}{{Eh{C`}}}Ej}``````````{{{f{b{Ad{c}}}}hDjDl}Ab{{Dn{{j{Dj}}}}{E`{{j{Dj}}}}}}{{{f{b{Ad{c}}}}hCj}Ab{{Dn{{j{Dj}}}}{E`{{j{Dj}}}}}}{{{f{bBf}}Cd}Ab}0{{{f{bCf}}Cd}Ab}0001```{{{f{bDh}}}A`}`{{{f{bDh}}}Ab}0{{{f{bDh}}Dd}Ab}=`={fc{}}000000000000{c{{El{e}}}{}{}}000000000000000000000{{}{{El{c}}}{}}000000000000000000000{{{f{Bf}}}Cd}`{fEn}000000000000000000000666```````````````6`{{DdF`}Ab}{{DdFbFd}Ab}{{FfFfCj}Dh}{{FfFfFfCj}Dd}{{DhDhDh}Ab}{DdAb}0","D":"Eh","p":[[0,"mut"],[5,"__IncompleteArrayField",2],[1,"reference"],[1,"usize"],[1,"slice"],[5,"BoolView",2],[5,"Propagator",2],[8,"c_int",449],[1,"unit"],[5,"__BindgenBitfieldUnit",2],[10,"Clone",450],[5,"Tchar",2],[5,"Tint",2],[5,"DecInfo",2],[5,"Branching",2],[5,"Lit",2],[5,"Reason",2],[20,"Reason__bindgen_ty_1",2],[5,"Reason__bindgen_ty_1__bindgen_ty_1",2],[5,"IntVar_PropInfo",2],[5,"IntVar_iterator",2],[5,"IntVar_reverse_iterator",2],[5,"DummyProblem",2],[6,"Ordering",451],[10,"Ord",451],[8,"c_uint",449],[5,"Clause",2],[10,"Default",452],[1,"bool"],[10,"PartialEq",451],[5,"Formatter",453],[8,"Result",453],[10,"Debug",453],[5,"vec",2],[5,"Var",2],[5,"IntVar",2],[1,"u8"],[1,"u64"],[10,"AsRef",454],[10,"AsMut",454],[10,"Hash",455],[10,"Hasher",455],[1,"array"],[6,"Option",456],[10,"PartialOrd",451],[6,"Result",457],[5,"TypeId",458],[8,"ConLevel",2],[8,"VarBranch",2],[8,"ValBranch",2],[1,"i32"],[5,"Branching__bindgen_vtable",2],[5,"Propagator__bindgen_vtable",2],[8,"IntVar_const_reverse_iterator",2],[8,"IntVar_const_iterator",2]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAJUBAwAAAOwAAwEIACIBnwA="}],\
["conjure_core",{"t":"ECDCCCCCCCCCPPPPPPGPFPGPGPPPPPPPPPGPPPPGPEPPPPPPIPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNPPGNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNOONNNNNNOONNNOONNNNNPGPPPPPINNNNNNNNNNNNNNFNNNONNNNNNNNNONNNNNNNNNNNNFNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNONHHHGIPPPFPGFPFNNNCONNNNNNNNNNNNNNNNNNNNNXNNNNNNNNNNNNNNNNNHHHHHHNHNNNNNNNOONNNOOONXQHHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNXEHPPPPPPPPPPPPPGGGFFKIGGFIPPNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNMNCNNNNNNNNNMNMNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPKGFPPNNNNNNNNNNNNNNNNNNFFFFKOONNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNOFFFNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNONNNNOOOOOOOONNNNNNNNNOOONNNNNNNNNNNNNNNN","n":["Model","ast","conjure_core","context","error","metadata","model","parse","rule_engine","rules","solver","stats","AllDiff","And","Bool","BoolDomain","Bounded","Bubble","Constant","Constant","DecisionVariable","DivEq","Domain","Eq","Expression","Geq","Gt","Ineq","Int","IntDomain","Leq","Lt","MachineName","Min","Name","Neq","Not","Nothing","Or","Range","Reference","ReturnType","SafeDiv","Single","Sum","SumEq","SumGeq","SumLeq","SymbolTable","UnsafeDiv","UserName","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","apply_i32","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_be_undefined","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","cmp","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","domain","domain_of","eq","eq","eq","eq","eq","eq","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","hash","into","into","into","into","into","into","is_all_diff","is_and","is_bubble","is_clean","is_constant","is_div_eq","is_eq","is_geq","is_gt","is_ineq","is_leq","is_lt","is_min","is_neq","is_not","is_nothing","is_or","is_reference","is_safe_div","is_sum","is_sum_eq","is_sum_geq","is_sum_leq","is_unsafe_div","new","partial_cmp","return_type","serialize","serialize","serialize","serialize","serialize","serialize","set_clean","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","types","uniplate","values_i32","vzip","vzip","vzip","vzip","vzip","vzip","Bool","Int","ReturnType","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deserialize","do_erased_serialize","eq","erased_serialize","fmt","from","into","serialize","to_owned","try_from","try_into","type_id","vzip","Context","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","do_erased_serialize","eq","erased_serialize","extra_rule_set_names","file_name","fmt","from","into","json_schema","new","new_ptr","rule_sets","rules","schema_id","schema_name","serialize","stats","target_solver_family","to_owned","try_from","try_into","type_id","vzip","Err","Error","JSON","NotImplemented","Ok","Other","Parse","Result","borrow","borrow_mut","fmt","fmt","from","from","from","into","source","to_string","try_from","try_into","type_id","vzip","Metadata","__clone_box","borrow","borrow_mut","clean","clone","clone_dirty","clone_into","clone_to_uninit","default","deserialize","do_erased_serialize","eq","erased_serialize","etype","fmt","fmt","from","into","new","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","Model","__clone_box","add_constraint","add_constraints","add_variable","borrow","borrow_mut","clone","clone_into","clone_to_uninit","constraints","context","deserialize","do_erased_serialize","eq","erased_serialize","fmt","from","gensym","get_constraints_vec","get_domain","into","new","new_empty","serialize","set_constraints","set_context","to_owned","try_from","try_into","type_id","update_domain","variables","vzip","get_example_model","get_example_model_by_path","model_from_json","ApplicationError","ApplicationResult","DomainError","Err","Ok","Reduction","ResolveRulesError","RewriteError","Rule","RuleNotApplicable","RuleSet","__clone_box","__clone_box","__clone_box","_dependencies","application","apply","apply","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","distributed_slice","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","get_dependencies","get_rule_by_name","get_rule_priorities","get_rule_set_by_name","get_rule_sets","get_rule_sets_for_solver_family","get_rules","get_rules","get_rules_vec","hash","hash","into","into","into","into","into","name","name","new","new","new","new_expression","new_top","order","pure","register_rule","register_rule_set","resolve_rule_sets","rewrite_model","rule_sets","solver_families","symbols","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_dependencies","with_symbols","with_top","distributed_slice","linkme","eval_constant","Complete","HasSolutions","Incomplete","Minion","ModelFeatureNotImplemented","ModelFeatureNotSupported","ModelInvalid","NoSolutions","OpNotImplemented","OpNotSupported","Runtime","RuntimeNotImplemented","SAT","SearchComplete","SearchIncomplete","SearchStatus","SolveSuccess","Solver","SolverAdaptor","SolverCallback","SolverError","SolverFamily","SolverFamilyIter","SolverMutCallback","Timeout","UserTerminated","__clone_box","__clone_box","__clone_box","__clone_box","adaptors","add_adaptor_info_to_stats","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","deserialize","do_erased_serialize","eq","erased_serialize","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_str","get_family","get_family","get_name","hash","init_solver","into","into","into","into","into","into","into","into","into_iter","iter","json_schema","len","load_model","load_model","model_modifier","new","next","next_back","nth","save_stats_to_context","schema_id","schema_name","serialize","size_hint","solve","solve","solve_mut","solve_mut","states","stats","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wall_time_s","Kissat","Minion","borrow","borrow","borrow_mut","borrow_mut","default","default","from","from","get_family","get_family","get_name","into","into","load_model","load_model","new","new","solve","solve","solve_mut","solve_mut","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ArgsInvalid","Error","ModelModifier","ModificationFailure","NotModifiable","OpNotImplemented","OpNotSupported","add_constraint","add_variable","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ExecutionFailure","ExecutionSuccess","Init","ModelLoaded","SolverState","_sealed","_sealed","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","from","from","from","from","into","into","into","into","stats","status","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","why","RewriterStats","SolverStats","Stats","__clone_box","__clone_box","__clone_box","add_rewriter_run","add_solver_run","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","conjure_solver_wall_time_s","default","default","default","do_erased_serialize","do_erased_serialize","do_erased_serialize","erased_serialize","erased_serialize","erased_serialize","from","from","from","into","into","into","is_optimization_enabled","json_schema","json_schema","json_schema","new","nodes","rewriter_rule_application_attempts","rewriter_rule_applications","rewriter_run_time","rewriter_runs","sat_clauses","sat_vars","satisfiable","schema_id","schema_id","schema_id","schema_name","schema_name","schema_name","serialize","serialize","serialize","solver_adaptor","solver_family","solver_runs","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_timings"],"q":[[0,"conjure_core"],[12,"conjure_core::ast"],[214,"conjure_core::ast::types"],[236,"conjure_core::context"],[267,"conjure_core::error"],[289,"conjure_core::metadata"],[316,"conjure_core::model"],[350,"conjure_core::parse"],[353,"conjure_core::rule_engine"],[469,"conjure_core::rule_engine::_dependencies"],[471,"conjure_core::rules"],[472,"conjure_core::solver"],[625,"conjure_core::solver::adaptors"],[656,"conjure_core::solver::model_modifier"],[681,"conjure_core::solver::states"],[723,"conjure_core::stats"],[803,"dyn_clone::sealed"],[804,"conjure_core::ast::domains"],[805,"core::option"],[806,"conjure_core::ast::expressions"],[807,"conjure_core::ast::constants"],[808,"core::cmp"],[809,"core::clone"],[810,"conjure_core::ast::symbol_table"],[811,"conjure_core::ast::variables"],[812,"core::result"],[813,"serde::de"],[814,"erased_serde::ser"],[815,"erased_serde::error"],[816,"core::fmt"],[817,"core::hash"],[818,"serde::ser"],[819,"alloc::string"],[820,"core::any"],[821,"uniplate::tree"],[822,"core::ops::function"],[823,"alloc::boxed"],[824,"alloc::vec"],[825,"schemars::gen"],[826,"schemars::schema"],[827,"conjure_core::rule_engine::rule"],[828,"conjure_core::rule_engine::rule_set"],[829,"std::sync::rwlock"],[830,"alloc::sync"],[831,"alloc::borrow"],[832,"anyhow"],[833,"serde_json::error"],[834,"core::error"],[835,"conjure_core::rule_engine::rewrite"],[836,"std::collections::hash::set"],[837,"std::collections::hash::map"],[838,"conjure_core::stats::solver_stats"],[839,"conjure_core::solver::adaptors::kissat"],[840,"conjure_core::solver::adaptors::minion"],[841,"conjure_core::stats::rewriter_stats"],[842,"conjure_core::parse::example_models"],[843,"conjure_core::parse::parse_model"],[844,"linkme_impl"],[845,"conjure_core::rule_engine::resolve_rules"],[846,"conjure_macros"],[847,"conjure_core::rules::constant"]],"if":"```````````````````````````````````````````````````{{bd}f}00000{{{b{h}}{A`{jj}{{l{{n{j}}}}}}{b{h}}}{{n{h}}}}{b{{b{c}}}{}}00000{{{b{Ab}}}{{b{Abc}}}{}}00000{{{b{Ad}}}Af}{{{b{Ah}}}Ah}{{{b{{Aj{c}}}}}{{Aj{c}}}{AlAn}}{{{b{h}}}h}{{{b{Ad}}}Ad}{{{b{B`}}}B`}{{{b{Bb}}}Bb}{{b{b{Abc}}}f{}}00000{bf}00000{{{b{B`}}{b{B`}}}Bd}{c{{Bf{Ah}}}Bh}{c{{Bf{{Aj{e}}}}}Bh{AlBj}}{c{{Bf{h}}}Bh}{c{{Bf{Ad}}}Bh}{c{{Bf{B`}}}Bh}{c{{Bf{Bb}}}Bh}{{b{b{AbBl}}}{{Bf{fBn}}}}00000`{{{b{Ad}}{b{C`}}}{{n{h}}}}{{{b{Ah}}{b{Ah}}}Af}{{{b{{Aj{c}}}}{b{{Aj{c}}}}}Af{AlCb}}{{{b{h}}{b{h}}}Af}{{{b{Ad}}{b{Ad}}}Af}{{{b{B`}}{b{B`}}}Af}{{{b{Bb}}{b{Bb}}}Af}{{b{b{AbBl}}}{{Bf{fCd}}}}00000{{{b{Ah}}{b{AbCf}}}Ch}0{{{b{{Aj{c}}}}{b{AbCf}}}Ch{AlCj}}{{{b{h}}{b{AbCf}}}Ch}{{{b{Ad}}{b{AbCf}}}Ch}0{{{b{B`}}{b{AbCf}}}Ch}0{{{b{Bb}}{b{AbCf}}}Ch}0{jAh}{AfAh}{cc{}}00{AfAd}{jAd}222{{{b{B`}}{b{Abc}}}fCl}{{}c{}}00000{{{b{Ad}}}Af}00000000000000000000000{hBb}{{{b{B`}}{b{B`}}}{{n{Bd}}}}{{{b{Ad}}}{{n{Cn}}}}{{{b{Ah}}c}BfD`}{{{b{{Aj{c}}}}e}Bf{AlDb}D`}{{{b{h}}c}BfD`}{{{b{Ad}}c}BfD`}{{{b{B`}}c}BfD`}{{{b{Bb}}c}BfD`}{{{b{AbAd}}Af}f}{bc{}}00000{bDd}000{c{{Bf{e}}}{}{}}00000{{}{{Bf{c}}}{}}00000{bDf}00000`{{{b{Ad}}}{{Dn{{Dh{Ad}}{Dl{Dj}}}}}}{{{b{h}}}{{n{{E`{j}}}}}}{{}c{}}00000```{{bd}f}{b{{b{c}}}{}}{{{b{Ab}}}{{b{Abc}}}{}}{{{b{Cn}}}Cn}{{b{b{Abc}}}f{}}{bf}{c{{Bf{Cn}}}Bh}{{b{b{AbBl}}}{{Bf{fBn}}}}{{{b{Cn}}{b{Cn}}}Af}{{b{b{AbBl}}}{{Bf{fCd}}}}{{{b{Cn}}{b{AbCf}}}Ch}{cc{}}<{{{b{Cn}}c}BfD`}{bc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{bDf}{{}c{}}`{{bd}f}{b{{b{c}}}{}}{{{b{Ab}}}{{b{Abc}}}{}}{{{b{Eb}}}Eb}{{b{b{Abc}}}f{}}{bf}{{}Eb}{{b{b{AbBl}}}{{Bf{fBn}}}}{{{b{Eb}}{b{Eb}}}Af}{{b{b{AbBl}}}{{Bf{fCd}}}}``{{{b{Eb}}{b{AbCf}}}Ch}{cc{}}<{{{b{AbEd}}}Ef}{{Eh{E`{Dd}}{E`{{b{Ej}}}}{E`{{b{El}}}}}Eb}{{Eh{E`{Dd}}{E`{{b{Ej}}}}{E`{{b{El}}}}}{{F`{{En{Eb}}}}}}``{{}{{Fd{Fb}}}}{{}Dd}{{{b{Eb}}c}BfD`}``{bc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{bDf}{{}c{}}````````{b{{b{c}}}{}}{{{b{Ab}}}{{b{Abc}}}{}}{{{b{Ff}}{b{AbCf}}}Ch}0{FhFf}{FjFf}{cc{}}6{{{b{Ff}}}{{n{{b{Fl}}}}}}{bDd};:98`{{bd}f}87`{{{b{Fn}}}Fn}0{{b{b{Abc}}}f{}}{bf}{{}Fn}{c{{Bf{Fn}}}Bh}{{b{b{AbBl}}}{{Bf{fBn}}}}{{{b{Fn}}{b{Fn}}}Af}{{b{b{AbBl}}}{{Bf{fCd}}}}`{{{b{Fn}}{b{AbCf}}}Ch}0<{{}c{}}6{{{b{Fn}}c}BfD`}{bc{}}={c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{bDf}5`?{{{b{AbG`}}Ad}f}{{{b{AbG`}}{E`{Ad}}}f}{{{b{AbG`}}B`Bb}f}{b{{b{c}}}{}}{{{b{Ab}}}{{b{Abc}}}{}}{{{b{G`}}}G`}{{b{b{Abc}}}f{}}{bf}``{c{{Bf{G`}}}Bh}{{b{b{AbBl}}}{{Bf{fBn}}}}{{{b{G`}}{b{G`}}}Af}{{b{b{AbBl}}}{{Bf{fCd}}}}{{{b{G`}}{b{AbCf}}}Ch}{cc{}}{{{b{G`}}}B`}{{{b{G`}}}{{E`{Ad}}}}{{{b{G`}}{b{B`}}}{{n{{b{h}}}}}}{{}c{}}{{C`Ad{F`{{En{Eb}}}}}G`}{{{F`{{En{Eb}}}}}G`}{{{b{G`}}c}BfD`}{{{b{AbG`}}{E`{Ad}}}f}{{{b{AbG`}}{F`{{En{Eb}}}}}f}{bc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{bDf}{{{b{AbG`}}{b{B`}}h}f}`:{{{b{Fb}}}{{Bf{G`Fh}}}}0{{{b{Fb}}{F`{{En{Eb}}}}}{{Gb{G`}}}}```````````{{bd}f}00``{{Gd{b{AbG`}}}f}{{{b{Ej}}{b{Ad}}{b{G`}}}Gf}{b{{b{c}}}{}}0000{{{b{Ab}}}{{b{Abc}}}{}}0000{{{b{Gd}}}Gd}{{{b{Ej}}}Ej}{{{b{El}}}El}{{b{b{Abc}}}f{}}00{bf}00`{{{b{Ej}}{b{Ej}}}Af}{{{b{El}}{b{El}}}Af}{{{b{Gh}}{b{AbCf}}}Ch}0{{{b{Gj}}{b{AbCf}}}Ch}0{{{b{Gd}}{b{AbCf}}}Ch}{{{b{Ej}}{b{AbCf}}}Ch}0{{{b{El}}{b{AbCf}}}Ch}0{cc{}}0000{{{b{El}}}{{b{{Gl{{b{El}}}}}}}}{{{b{Fb}}}{{n{{b{Ej}}}}}}{{{b{{E`{{b{El}}}}}}}{{Bf{{H`{{b{Ej}}Gn}}`}}}}{{{b{Fb}}}{{n{{b{El}}}}}}{{}{{E`{{b{El}}}}}}{Eh{{E`{{b{El}}}}}}{{}{{E`{{b{Ej}}}}}}{{{b{El}}}{{b{{H`{{b{Ej}}Gn}}}}}}{{{b{{H`{{b{Ej}}Gn}}}}}{{E`{{b{Ej}}}}}}{{{b{Ej}}{b{Abc}}}fCl}{{{b{El}}{b{Abc}}}fCl}{{}c{}}0000``{{AdAdC`}Gd}{{{b{Fb}}{A`{{b{Ad}}{b{G`}}}{{l{Gf}}}}{b{{Hb{{Dn{{b{Fb}}Gn}}}}}}}Ej}{{{b{Fb}}Gn{b{{Hb{{b{Fb}}}}}}{b{{Hb{Eh}}}}}El}```{AdGd}``{{Eh{b{{E`{Dd}}}}}{{Bf{{E`{{b{El}}}}`}}}}{{{b{G`}}{b{{E`{{b{El}}}}}}}{{Bf{G`Gh}}}}```{bc{}}00{bDd}000{c{{Bf{e}}}{}{}}0000{{}{{Bf{c}}}{}}0000{bDf}0000;;;;;{{{b{El}}}{{Gl{{b{El}}}}}}{{AdC`}Gd}{{AdAd}Gd}``{{{b{Ad}}}{{n{Ah}}}}``````````````````````````{{bd}f}000`{{{b{Hd}}Hf}Hf}{b{{b{c}}}{}}0000000{{{b{Ab}}}{{b{Abc}}}{}}0000000{{{b{Eh}}}Eh}{{{b{Hh}}}Hh}{{{b{{Hj{ce}}}}}{{Hj{ce}}}{AnHd}{AnHl}}{{{b{Hn}}}Hn}{{b{b{Abc}}}f{}}000{bf}000{c{{Bf{Eh}}}Bh}{{b{b{AbBl}}}{{Bf{fBn}}}}{{{b{Eh}}{b{Eh}}}Af}{{b{b{AbBl}}}{{Bf{fCd}}}}{{{b{Eh}}{b{AbCf}}}Ch}{{{b{Eh}}{b{AbCf}}}{{Bf{fI`}}}}{{{b{Hh}}{b{AbCf}}}Ch}{{{b{Hn}}{b{AbCf}}}Ch}0{cc{}}0000000{{{b{Fb}}}{{Bf{Ehc}}}{}}{{{b{Hd}}}Eh}{{{b{{Hj{c}}}}}EhHd}{{{b{Hd}}}{{n{Dd}}}}{{{b{Eh}}{b{Abc}}}fCl}`{{}c{}}00000000{{}Hh}{{{b{AbEd}}}Ef}{{{b{Hh}}}Ib}`{{{Hj{cId}}G`}{{Bf{{Hj{cIf}}Hn}}}Hd}`{c{{Hj{c}}}Hd}{{{b{AbHh}}}{{n{c}}}{}}0{{{b{AbHh}}Ib}{{n{c}}}{}}{{{b{{Hj{cIh}}}}}fHd}{{}{{Fd{Fb}}}}{{}Dd}{{{b{Eh}}c}BfD`}{{{b{Hh}}}{{Dn{Ib{n{Ib}}}}}}`{{{Hj{cIf}}Ij}{{Bf{{Hj{cIh}}Hn}}}Hd}`{{{Hj{cIf}}In}{{Bf{{Hj{cIh}}Hn}}}Hd}`{{{b{{Hj{cIh}}}}}HfHd}{bc{}}000{bDd}0{c{{Bf{e}}}{}{}}000{{{b{Fb}}}{{Bf{Ehc}}}{}}1111{{}{{Bf{c}}}{}}0000000{bDf}0000000{{}c{}}0000000{{{b{{Hj{cIh}}}}}J`Hd}``{b{{b{c}}}{}}0{{{b{Ab}}}{{b{Abc}}}{}}0{{}Jb}{{}Jd}{cc{}}0{{{b{Jb}}}Eh}{{{b{Jd}}}Eh}{{{b{Jd}}}{{n{Dd}}}}99``54````==;;::99```````{{{b{Jf}}Ad}{{Bf{fJh}}}}{{{b{Jf}}B`h}{{Bf{fJh}}}}998855;;??==<<;;```````999988885555;;;;``????====<<<<;;;;````{{bd}f}00{{{b{AbJj}}Jl}f}{{{b{AbJj}}Hf}f}<<<;;;{{{b{Jl}}}Jl}{{{b{Hf}}}Hf}{{{b{Jj}}}Jj}{{b{b{Abc}}}f{}}00{bf}00`{{}Jl}{{}Hf}{{}Jj}{{b{b{AbBl}}}{{Bf{fBn}}}}00{{b{b{AbBl}}}{{Bf{fCd}}}}00{cc{}}00{{}c{}}00`{{{b{AbEd}}}Ef}005````````{{}{{Fd{Fb}}}}00{{}Dd}00{{{b{Jl}}c}BfD`}{{{b{Hf}}c}BfD`}{{{b{Jj}}c}BfD`}```{bc{}}00{c{{Bf{e}}}{}{}}00{{}{{Bf{c}}}{}}00{bDf}00:::{{HfJ`}Hf}","D":"AGd","p":[[1,"reference"],[5,"Private",803],[1,"unit"],[6,"Domain",12,804],[1,"i32"],[17,"Output"],[6,"Option",805],[1,"fn"],[0,"mut"],[6,"Expression",12,806],[1,"bool"],[6,"Constant",12,807],[6,"Range",12,804],[10,"Ord",808],[10,"Clone",809],[6,"Name",12,810],[5,"DecisionVariable",12,811],[6,"Ordering",808],[6,"Result",812],[10,"Deserializer",813],[10,"Deserialize",813],[10,"Serializer",814],[6,"ErrorImpl",814],[8,"SymbolTable",12,810],[10,"PartialEq",808],[5,"Error",815],[5,"Formatter",816],[8,"Result",816],[10,"Debug",816],[10,"Hasher",817],[6,"ReturnType",214],[10,"Serializer",818],[10,"Serialize",818],[5,"String",819],[5,"TypeId",820],[6,"Tree",821],[10,"Fn",822],[5,"Box",823],[1,"tuple"],[5,"Vec",824],[5,"Context",236],[5,"SchemaGenerator",825],[6,"Schema",826],[6,"SolverFamily",472],[5,"Rule",353,827],[5,"RuleSet",353,828],[5,"RwLock",829],[5,"Arc",830],[1,"str"],[6,"Cow",831],[6,"Error",267],[5,"Error",832],[5,"Error",833],[10,"Error",834],[5,"Metadata",289],[5,"Model",316],[8,"Result",267],[5,"Reduction",353,827],[8,"ApplicationResult",353,827],[6,"RewriteError",353,835],[6,"ApplicationError",353,827],[5,"HashSet",836],[1,"u8"],[5,"HashMap",837],[1,"slice"],[10,"SolverAdaptor",472],[5,"SolverStats",723,838],[5,"SolverFamilyIter",472],[5,"Solver",472],[10,"SolverState",681],[6,"SolverError",472],[5,"Error",816],[1,"usize"],[5,"Init",681],[5,"ModelLoaded",681],[5,"ExecutionSuccess",681],[8,"SolverCallback",472],[5,"SolveSuccess",472],[8,"SolverMutCallback",472],[1,"f64"],[5,"Kissat",625,839],[5,"Minion",625,840],[10,"ModelModifier",656],[6,"ModificationFailure",656],[5,"Stats",723],[5,"RewriterStats",723,841],[6,"SearchStatus",472],[6,"SearchComplete",472],[6,"SearchIncomplete",472],[5,"NotModifiable",656],[5,"ExecutionFailure",681]],"r":[[0,316],[18,807],[20,811],[22,804],[24,806],[34,810],[39,804],[41,214],[48,810],[350,842],[351,842],[352,843],[353,827],[354,827],[358,827],[360,835],[361,827],[363,828],[390,844],[409,845],[415,845],[432,846],[433,846],[434,845],[435,835],[469,844],[471,847],[625,839],[626,840],[723,841],[724,838]],"b":[[116,"impl-Display-for-Constant"],[117,"impl-Debug-for-Constant"],[120,"impl-Display-for-Expression"],[121,"impl-Debug-for-Expression"],[122,"impl-Display-for-Name"],[123,"impl-Debug-for-Name"],[124,"impl-Display-for-DecisionVariable"],[125,"impl-Debug-for-DecisionVariable"],[126,"impl-From%3Ci32%3E-for-Constant"],[127,"impl-From%3Cbool%3E-for-Constant"],[131,"impl-From%3Cbool%3E-for-Expression"],[132,"impl-From%3Ci32%3E-for-Expression"],[277,"impl-Display-for-Error"],[278,"impl-Debug-for-Error"],[279,"impl-From%3CError%3E-for-Error"],[280,"impl-From%3CError%3E-for-Error"],[304,"impl-Display-for-Metadata"],[305,"impl-Debug-for-Metadata"],[393,"impl-Display-for-RewriteError"],[394,"impl-Debug-for-RewriteError"],[395,"impl-Display-for-ApplicationError"],[396,"impl-Debug-for-ApplicationError"],[398,"impl-Display-for-Rule%3C\'a%3E"],[399,"impl-Debug-for-Rule%3C\'a%3E"],[400,"impl-Display-for-RuleSet%3C\'a%3E"],[401,"impl-Debug-for-RuleSet%3C\'a%3E"],[536,"impl-Debug-for-SolverFamily"],[537,"impl-Display-for-SolverFamily"],[539,"impl-Display-for-SolverError"],[540,"impl-Debug-for-SolverError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAGkCQgAAAAQABgAEAAwAAAAPAAIAEwAAABUAAAAXAAAAHQABACEAAAAjAAAAKAAAACoAAAAsAAAALgAAADEAAAAzAAYAOwAsAGkAFwCEAAEAiQAAAJMAAACoACcA0QATAOcAEwD9AA4ADQECABEBCAAcARYANQEYAFABAQBTAQsAYQEBAGQBAABoAQEAawEAAG0BJQChAQEAqAEAAKoBBAC1AQAAtwEbANYBAQDaAQAA3AEMAO4BAADwAQYA+QEkACYCAAAoAgAAKgIBADQCBQA7AggARQIAAEcCAABJAigAdAIFAHwCAgCBAhAAmAIFAKICBwCsAgIAsQIHAMMCJwDsAggA+wIVABMDEAA="}],\
["conjure_macros",{"t":"XQ","n":["register_rule","register_rule_set"],"q":[[0,"conjure_macros"]],"i":[0,0],"f":"``","D":"d","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAAA"}],\
["conjure_oxide",{"t":"GIPPGPFPFPPPPFFPFPGNNNNNNNNNONNCNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNOCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHHNNNNNNNNNNNNNNHOONNNNNNOOONXQCOCNNNNNNNCONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCONNNNNNNNNNNPPPPPPPGPFPGPGPPPPPPPPPPGPPPPGPGPPPPPPIPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNPPGHGIPPPFPGFPFCONNXNNNNHHHHHHHNOOOOOXQHHOOONNNNNXFNNNNNNNXNNNNNNNNNHPPPPPPPPPPPPPGGGFFKIGGFIPPNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNMNCNNNNNNMNMNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPKGFPPNNNNNNNNNNNNNNNNNNFFFFKOONNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNOCCCCPGPNNNNNNHNHHNNNNNHHHHHHHHHHH","n":["ApplicationError","ApplicationResult","DomainError","Err","Error","JSON","Metadata","Minion","Model","NotImplemented","Ok","Other","Parse","Reduction","Rule","RuleNotApplicable","RuleSet","SAT","SolverFamily","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_constraint","add_constraints","add_variable","application","apply","apply","ast","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clean","clone","clone","clone","clone","clone","clone","clone_dirty","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","constraints","context","default","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","eq","eq","eq","eq","eq","erased_serialize","erased_serialize","erased_serialize","etype","find_conjure","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_str","gensym","get_constraints_vec","get_dependencies","get_domain","get_example_model","get_example_model_by_path","get_rule_by_name","get_rule_set_by_name","get_rule_sets","get_rule_sets_for_solver_family","get_rules","get_rules","hash","hash","hash","into","into","into","into","into","into","into","into","iter","json_schema","model_from_json","name","name","new","new","new","new","new","new_empty","new_expression","new_top","order","pure","register_rule","register_rule_set","rule_engine","rule_sets","rules","schema_id","schema_name","serialize","serialize","serialize","set_constraints","set_context","solver","solver_families","source","symbols","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_domain","utils","variables","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_dependencies","with_symbols","with_top","AllDiff","And","Bool","Bool","BoolDomain","Bounded","Bubble","Constant","Constant","DecisionVariable","DivEq","Domain","Eq","Expression","Geq","Gt","Ineq","Int","Int","IntDomain","Leq","Lt","MachineName","Min","Name","Neq","Not","Nothing","Or","Range","Reference","ReturnType","SafeDiv","Single","Sum","SumEq","SumGeq","SumLeq","SymbolTable","UnsafeDiv","UserName","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","apply_i32","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_be_undefined","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","cmp","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","do_erased_serialize","domain","domain_of","eq","eq","eq","eq","eq","eq","eq","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","erased_serialize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","hash","into","into","into","into","into","into","into","is_all_diff","is_and","is_bubble","is_clean","is_constant","is_div_eq","is_eq","is_geq","is_gt","is_ineq","is_leq","is_lt","is_min","is_neq","is_not","is_nothing","is_or","is_reference","is_safe_div","is_sum","is_sum_eq","is_sum_geq","is_sum_leq","is_unsafe_div","new","partial_cmp","return_type","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_clean","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","uniplate","values_i32","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Bool","Int","ReturnType","conjure_executable","ApplicationError","ApplicationResult","DomainError","Err","Ok","Reduction","ResolveRulesError","RewriteError","Rule","RuleNotApplicable","RuleSet","_dependencies","application","borrow","borrow_mut","distributed_slice","fmt","fmt","from","from","get_rule_by_name","get_rule_priorities","get_rule_set_by_name","get_rule_sets","get_rule_sets_for_solver_family","get_rules","get_rules_vec","into","name","name","new_expression","new_top","order","register_rule","register_rule_set","resolve_rule_sets","rewrite_model","rule_sets","solver_families","symbols","to_string","try_from","try_into","type_id","vzip","distributed_slice","DistributedSlice","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","distributed_slice","from","into","into_iter","static_slice","to_owned","try_from","try_into","type_id","vzip","eval_constant","Complete","HasSolutions","Incomplete","Minion","ModelFeatureNotImplemented","ModelFeatureNotSupported","ModelInvalid","NoSolutions","OpNotImplemented","OpNotSupported","Runtime","RuntimeNotImplemented","SAT","SearchComplete","SearchIncomplete","SearchStatus","SolveSuccess","Solver","SolverAdaptor","SolverCallback","SolverError","SolverFamily","SolverFamilyIter","SolverMutCallback","Timeout","UserTerminated","__clone_box","__clone_box","__clone_box","adaptors","add_adaptor_info_to_stats","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","fmt","fmt","fmt","from","from","from","from","from","from","from","get_family","get_family","get_name","init_solver","into","into","into","into","into","into","into","into_iter","len","load_model","load_model","model_modifier","new","next","next_back","nth","save_stats_to_context","size_hint","solve","solve","solve_mut","solve_mut","states","stats","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wall_time_s","Kissat","Minion","borrow","borrow","borrow_mut","borrow_mut","default","default","from","from","get_family","get_family","get_name","into","into","load_model","load_model","new","new","solve","solve","solve_mut","solve_mut","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ArgsInvalid","Error","ModelModifier","ModificationFailure","NotModifiable","OpNotImplemented","OpNotSupported","add_constraint","add_variable","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ExecutionFailure","ExecutionSuccess","Init","ModelLoaded","SolverState","_sealed","_sealed","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","from","from","from","from","into","into","into","into","stats","status","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","why","conjure","json","misc","testing","ConjurePrettyError","EssenceParseError","ParseError","borrow","borrow_mut","fmt","fmt","from","from","get_minion_solutions","into","minion_solutions_to_json","parse_essence_file","to_string","try_from","try_into","type_id","vzip","sort_json_object","sort_json_variables","to_set","assert_eq_any_order","minion_solutions_from_json","read_minion_solutions_json","read_model_json","save_minion_solutions_json","save_model_json","save_stats_json","serialise_model"],"q":[[0,"conjure_oxide"],[217,"conjure_oxide::ast"],[440,"conjure_oxide::ast::types"],[443,"conjure_oxide::find_conjure"],[444,"conjure_oxide::rule_engine"],[489,"conjure_oxide::rule_engine::_dependencies"],[490,"conjure_oxide::rule_engine::_dependencies::linkme"],[508,"conjure_oxide::rules"],[509,"conjure_oxide::solver"],[634,"conjure_oxide::solver::adaptors"],[665,"conjure_oxide::solver::model_modifier"],[690,"conjure_oxide::solver::states"],[732,"conjure_oxide::utils"],[736,"conjure_oxide::utils::conjure"],[754,"conjure_oxide::utils::json"],[756,"conjure_oxide::utils::misc"],[757,"conjure_oxide::utils::testing"],[765,"dyn_clone::sealed"],[766,"conjure_core::model"],[767,"conjure_core::ast::expressions"],[768,"alloc::vec"],[769,"conjure_core::ast::symbol_table"],[770,"conjure_core::ast::variables"],[771,"conjure_core::rule_engine::rule"],[772,"core::result"],[773,"conjure_core::metadata"],[774,"conjure_core::rule_engine::rule_set"],[775,"conjure_core::solver"],[776,"serde::de"],[777,"erased_serde::ser"],[778,"erased_serde::error"],[779,"conjure_core::error"],[780,"core::fmt"],[781,"serde_json::error"],[782,"anyhow"],[783,"std::collections::hash::set"],[784,"conjure_core::ast::domains"],[785,"core::option"],[786,"std::collections::hash::map"],[787,"core::hash"],[788,"schemars::gen"],[789,"schemars::schema"],[790,"conjure_core::context"],[791,"std::sync::rwlock"],[792,"alloc::sync"],[793,"alloc::borrow"],[794,"alloc::string"],[795,"serde::ser"],[796,"core::error"],[797,"core::any"],[798,"conjure_core::ast::constants"],[799,"core::clone"],[800,"core::cmp"],[801,"conjure_core::ast::types"],[802,"uniplate::tree"],[803,"core::ops::function"],[804,"alloc::boxed"],[805,"conjure_core::rule_engine::rewrite"],[806,"conjure_core::rule_engine::resolve_rules"],[807,"linkme::distributed_slice"],[808,"conjure_core::stats::solver_stats"],[809,"conjure_core::solver::states"],[810,"conjure_core::solver::private"],[811,"conjure_core::solver::adaptors::kissat"],[812,"conjure_core::solver::adaptors::minion"],[813,"conjure_core::solver::model_modifier"],[814,"serde_json::value"],[815,"std::io::error"],[816,"conjure_core"],[817,"conjure_core::parse::example_models"],[818,"conjure_core::rule_engine"],[819,"conjure_core::parse::parse_model"],[820,"conjure_macros"],[821,"conjure_core::ast"],[822,"linkme_impl"],[823,"conjure_core::rules::constant"]],"i":[0,0,12,88,0,22,0,16,0,22,88,22,22,0,0,12,0,16,0,14,5,10,11,15,16,5,5,5,11,10,11,0,22,14,5,12,10,11,15,16,22,14,5,12,10,11,15,16,14,14,5,10,11,15,16,14,14,5,10,11,15,16,14,5,10,11,15,16,5,5,14,14,5,16,14,5,16,14,5,11,15,16,14,5,16,14,0,22,22,14,14,5,12,12,10,11,11,15,15,16,16,22,22,22,14,5,12,10,11,15,16,16,5,5,15,5,0,0,0,0,0,0,0,15,11,15,16,22,14,5,12,10,11,15,16,16,16,0,11,15,14,5,10,11,15,5,10,10,15,10,0,0,0,11,0,16,16,14,5,16,5,5,0,15,22,10,14,5,10,11,15,16,22,14,12,11,15,16,22,14,5,12,10,11,15,16,16,22,14,5,12,10,11,15,16,22,14,5,12,10,11,15,16,5,0,5,22,14,5,12,10,11,15,16,15,10,10,6,6,50,54,29,51,6,0,6,0,6,0,6,0,6,6,6,50,54,29,6,6,8,6,0,6,6,6,6,0,6,0,6,51,6,6,6,6,0,6,8,50,51,29,6,8,54,9,29,50,51,29,6,8,54,9,50,51,29,6,8,54,9,6,50,51,29,6,8,54,9,50,51,29,6,8,54,9,50,51,29,6,8,54,9,8,50,51,29,6,8,54,9,50,51,29,6,8,54,9,9,6,50,51,29,6,8,54,9,50,51,29,6,8,54,9,50,50,51,29,6,6,8,8,54,9,9,50,50,50,51,29,6,6,6,8,54,9,8,50,51,29,6,8,54,9,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,9,8,6,50,51,29,6,8,54,9,6,50,51,29,6,8,54,9,50,6,8,9,50,51,29,6,8,54,9,50,51,29,6,8,54,9,50,51,29,6,8,54,9,0,6,29,50,51,29,6,8,54,9,54,54,0,0,0,0,12,88,88,0,64,0,0,12,0,0,11,64,64,0,64,64,64,64,0,0,0,0,0,0,0,64,11,15,10,10,15,0,0,0,0,11,15,10,64,64,64,64,64,0,0,66,66,66,66,66,66,66,0,66,66,66,66,66,66,66,66,66,0,89,90,89,16,71,71,71,90,71,71,71,71,16,0,0,0,0,0,0,0,0,0,0,0,91,91,34,69,71,0,67,76,89,91,90,34,69,71,76,89,91,90,34,69,71,34,69,71,34,69,71,34,69,71,34,71,71,76,89,91,90,34,69,71,67,69,67,67,76,89,91,90,34,69,71,34,34,67,69,0,69,34,34,34,69,34,67,69,67,69,0,69,34,69,71,71,76,89,91,90,34,69,71,76,89,91,90,34,69,71,76,89,91,90,34,69,71,76,89,91,90,34,69,71,69,0,0,78,79,78,79,78,79,78,79,78,79,79,78,79,78,79,78,79,78,79,78,79,78,79,78,79,78,79,78,79,81,81,0,0,0,81,81,80,80,92,81,92,81,92,81,92,81,92,81,92,81,92,81,92,81,0,0,0,0,0,75,93,94,74,75,93,94,74,75,93,94,74,75,93,94,74,75,93,75,75,94,74,75,93,94,74,75,93,94,74,75,93,94,74,75,93,93,0,0,0,0,82,0,82,82,82,82,82,82,82,0,82,0,0,82,82,82,82,82,0,0,0,0,0,0,0,0,0,0,0],"f":"```````````````````{{bd}f}00000{{{b{hj}}l}f}{{{b{hj}}{n{l}}}f}{{{b{hj}}A`Ab}f}`{{Ad{b{hj}}}f}{{{b{Af}}{b{l}}{b{j}}}{{Aj{AdAh}}}}`{b{{b{c}}}{}}0000000{{{b{h}}}{{b{hc}}}{}}0000000`{{{b{Al}}}Al}{{{b{j}}}j}{{{b{Ad}}}Ad}{{{b{Af}}}Af}{{{b{An}}}An}{{{b{B`}}}B`}5{{b{b{hc}}}f{}}00000{bf}00000``{{}Al}{c{{Aj{Al}}}Bb}{c{{Aj{j}}}Bb}{c{{Aj{B`}}}Bb}{{b{b{hBd}}}{{Aj{fBf}}}}00{{{b{Al}}{b{Al}}}Bh}{{{b{j}}{b{j}}}Bh}{{{b{Af}}{b{Af}}}Bh}{{{b{An}}{b{An}}}Bh}{{{b{B`}}{b{B`}}}Bh}{{b{b{hBd}}}{{Aj{fBj}}}}00``{{{b{Bl}}{b{hBn}}}{{Aj{fC`}}}}0{{{b{Al}}{b{hBn}}}{{Aj{fC`}}}}0{{{b{j}}{b{hBn}}}{{Aj{fC`}}}}{{{b{Ah}}{b{hBn}}}{{Aj{fC`}}}}0{{{b{Ad}}{b{hBn}}}{{Aj{fC`}}}}{{{b{Af}}{b{hBn}}}{{Aj{fC`}}}}0{{{b{An}}{b{hBn}}}{{Aj{fC`}}}}0{{{b{B`}}{b{hBn}}}{{Aj{fC`}}}}0{CbBl}{CdBl}{cc{}}0000000{{{b{Cf}}}{{Aj{B`}}}}{{{b{j}}}A`}{{{b{j}}}{{n{l}}}}{{{b{An}}}{{b{{Ch{{b{An}}}}}}}}{{{b{j}}{b{A`}}}{{Cl{{b{Cj}}}}}}{{{b{Cf}}}{{Aj{jCd}}}}0{{{b{Cf}}}{{Cl{{b{Af}}}}}}{{{b{Cf}}}{{Cl{{b{An}}}}}}{{}{{n{{b{An}}}}}}{B`{{n{{b{An}}}}}}{{}{{n{{b{Af}}}}}}{{{b{An}}}{{b{{D`{{b{Af}}Cn}}}}}}{{{b{Af}}{b{hc}}}fDb}{{{b{An}}{b{hc}}}fDb}{{{b{B`}}{b{hc}}}fDb}{{}c{}}0000000{{}Dd}{{{b{hDf}}}Dh}{{{b{Cf}}{Dn{{Dl{Dj}}}}}{{Aj{jBl}}}}``{{}Al}{{{D`{A`Ab}}l{Dn{{Dl{Dj}}}}}j}{{ll{D`{A`Ab}}}Ad}{{{b{Cf}}{Eb{{b{l}}{b{j}}}{{E`{{Aj{AdAh}}}}}}{b{{Ef{{Ed{{b{Cf}}Cn}}}}}}}Af}{{{b{Cf}}Cn{b{{Ef{{b{Cf}}}}}}{b{{Ef{B`}}}}}An}{{{Dn{{Dl{Dj}}}}}j}```{lAd}`````{{}{{Eh{Cf}}}}{{}Ej}{{{b{Al}}c}AjEl}{{{b{j}}c}AjEl}{{{b{B`}}c}AjEl}{{{b{hj}}{n{l}}}f}{{{b{hj}}{Dn{{Dl{Dj}}}}}f}``{{{b{Bl}}}{{Cl{{b{En}}}}}}`{bc{}}00000{bEj}00000{c{{Aj{e}}}{}{}}000000{{{b{Cf}}}{{Aj{B`}}}}1{{}{{Aj{c}}}{}}0000000{bF`}0000000{{{b{hj}}{b{A`}}Cj}f}``{{}c{}}0000000{{{b{An}}}{{Ch{{b{An}}}}}}{{l{D`{A`Ab}}}Ad}{{ll}Ad}`````````````````````````````````````````{{bd}f}000000{{{b{Cj}}{Eb{FbFb}{{E`{{Cl{Fb}}}}}}{b{Cj}}}{{Cl{Cj}}}}{b{{b{c}}}{}}000000{{{b{h}}}{{b{hc}}}{}}000000{{{b{l}}}Bh}{{{b{Fd}}}Fd}{{{b{{Ff{c}}}}}{{Ff{c}}}{FhFj}}{{{b{Cj}}}Cj}{{{b{l}}}l}{{{b{A`}}}A`}{{{b{Fl}}}Fl}{{{b{Ab}}}Ab}{{b{b{hc}}}f{}}000000{bf}000000{{{b{A`}}{b{A`}}}Fn}{c{{Aj{Fd}}}Bb}{c{{Aj{{Ff{e}}}}}Bb{FjG`}}{c{{Aj{Cj}}}Bb}{c{{Aj{l}}}Bb}{c{{Aj{A`}}}Bb}{c{{Aj{Fl}}}Bb}{c{{Aj{Ab}}}Bb}{{b{b{hBd}}}{{Aj{fBf}}}}000000`{{{b{l}}{b{{D`{A`Ab}}}}}{{Cl{Cj}}}}{{{b{Fd}}{b{Fd}}}Bh}{{{b{{Ff{c}}}}{b{{Ff{c}}}}}Bh{GbFj}}{{{b{Cj}}{b{Cj}}}Bh}{{{b{l}}{b{l}}}Bh}{{{b{A`}}{b{A`}}}Bh}{{{b{Fl}}{b{Fl}}}Bh}{{{b{Ab}}{b{Ab}}}Bh}{{b{b{hBd}}}{{Aj{fBj}}}}000000{{{b{Fd}}{b{hBn}}}{{Aj{fC`}}}}0{{{b{{Ff{c}}}}{b{hBn}}}{{Aj{fC`}}}{GdFj}}{{{b{Cj}}{b{hBn}}}{{Aj{fC`}}}}{{{b{l}}{b{hBn}}}{{Aj{fC`}}}}0{{{b{A`}}{b{hBn}}}{{Aj{fC`}}}}0{{{b{Fl}}{b{hBn}}}{{Aj{fC`}}}}{{{b{Ab}}{b{hBn}}}{{Aj{fC`}}}}0{BhFd}{cc{}}{FbFd}11{Bhl}{Fbl}3333{{{b{A`}}{b{hc}}}fDb}{{}c{}}000000{{{b{l}}}Bh}00000000000000000000000{CjAb}{{{b{A`}}{b{A`}}}{{Cl{Fn}}}}{{{b{l}}}{{Cl{Fl}}}}{{{b{Fd}}c}AjEl}{{{b{{Ff{c}}}}e}Aj{FjGf}El}{{{b{Cj}}c}AjEl}{{{b{l}}c}AjEl}{{{b{A`}}c}AjEl}{{{b{Fl}}c}AjEl}{{{b{Ab}}c}AjEl}{{{b{hl}}Bh}f}{bc{}}000000{bEj}000{c{{Aj{e}}}{}{}}000000{{}{{Aj{c}}}{}}000000{bF`}000000`{{{b{l}}}{{Ed{{Gh{l}}{Gl{Gj}}}}}}{{{b{Cj}}}{{Cl{{n{Fb}}}}}}{{}c{}}000000```{{}{{Gn{f}}}}`````````````{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}`{{{b{H`}}{b{hBn}}}{{Aj{fC`}}}}0{cc{}}{HbH`}{{{b{Cf}}}{{Cl{{b{Af}}}}}}{{{b{{n{{b{An}}}}}}}{{Aj{{D`{{b{Af}}Cn}}Hb}}}}{{{b{Cf}}}{{Cl{{b{An}}}}}}{{}{{n{{b{An}}}}}}{B`{{n{{b{An}}}}}}{{}{{n{{b{Af}}}}}}{{{b{{D`{{b{Af}}Cn}}}}}{{n{{b{Af}}}}}}=```````{{B`{b{{n{Ej}}}}}{{Aj{{n{{b{An}}}}Hb}}}}{{{b{j}}{b{{n{{b{An}}}}}}}{{Aj{jH`}}}}```{bEj}{c{{Aj{e}}}{}{}}{{}{{Aj{c}}}{}}{bF`}{{}c{}}``{{bd}f}{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{{{b{{Hd{{Ef{c}}}}}}}{{Hd{{Ef{c}}}}}{}}{{b{b{hc}}}f{}}{bf}{{{b{{Hd{{Ef{c}}}}}}}b{}}`{cc{}}8{{{Hd{{Ef{c}}}}}{}{}}{{{Hd{{Ef{c}}}}}{{b{{Ef{c}}}}}{}}{bc{}}>=<;{{{b{l}}}{{Cl{Fd}}}}``````````````````````````;;;`{{{b{Hf}}Hh}Hh};;;;;;;:::::::{{{b{Dd}}}Dd}{{{b{{Hj{ce}}}}}{{Hj{ce}}}{FhHf}{FhHl}}{{{b{Hn}}}Hn};;;:::{{{b{Dd}}{b{hBn}}}{{Aj{fC`}}}}{{{b{Hn}}{b{hBn}}}{{Aj{fC`}}}}0:::::::{{{b{Hf}}}B`}{{{b{{Hj{c}}}}}B`Hf}{{{b{Hf}}}{{Cl{Ej}}}}{{{b{hHf}}I`}f}{{}c{}}0000000{{{b{Dd}}}Ib}{{{b{hHf}}jI`}{{Aj{fHn}}}}{{{Hj{c}}j}{{Aj{{Hj{cId}}Hn}}}Hf}`{c{{Hj{c}}}Hf}{{{b{hDd}}}Cl}0{{{b{hDd}}Ib}Cl}{{{b{{Hj{cIf}}}}}fHf}{{{b{Dd}}}{{Ed{Ib{Cl{Ib}}}}}}{{{b{hHf}}{Gl{Gj}}I`}{{Aj{IhHn}}}}{{{Hj{cId}}{Gl{Gj}}}{{Aj{{Hj{cIf}}Hn}}}Hf}10`{{{b{{Hj{cIf}}}}}HhHf}{bc{}}00{bEj}{c{{Aj{e}}}{}{}}000000{{}{{Aj{c}}}{}}000000{bF`}000000{{}c{}}000000{{{b{{Hj{cIf}}}}}IjHf}``{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{}Il}{{}In}{cc{}}0{{{b{Il}}}B`}{{{b{In}}}B`}{{{b{In}}}{{Cl{Ej}}}}99{{{b{hIl}}jI`}{{Aj{fHn}}}}{{{b{hIn}}jI`}{{Aj{fHn}}}}76{{{b{hIl}}{Gl{Gj}}I`}{{Aj{IhHn}}}}{{{b{hIn}}{Gl{Gj}}I`}{{Aj{IhHn}}}}10{c{{Aj{e}}}{}{}}0{{}{{Aj{c}}}{}}0{bF`}0{{}c{}}0```````{{{b{J`}}l}{{Aj{fJb}}}}{{{b{J`}}A`Cj}{{Aj{fJb}}}}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0??4477665544```````11110000????4444``7777666655554444````````10{{{b{Jd}}{b{hBn}}}Jf}0{BlJd}{cc{}}{j{{Aj{{n{{D`{A`Fd}}}}Cd}}}}8{{{b{{n{{D`{A`Fd}}}}}}}Jh}{{{b{Cf}}{b{Cf}}{Dn{{Dl{Dj}}}}}{{Aj{jJd}}}}{bEj}>=<;{{{b{Jh}}Bh}Jh}{{{b{Jh}}}Jh}{{{b{{n{c}}}}}{{Ch{c}}}{JjJlGdFh}}{{{b{{n{{n{c}}}}}}{b{{n{{n{c}}}}}}}f{JjJlGdFh}}{{{b{Cf}}}{{Aj{{n{{D`{A`Fd}}}}Cd}}}}{{{b{Cf}}{b{Cf}}{b{Cf}}}{{Aj{JhCd}}}}{{{b{Cf}}{b{Cf}}{b{Cf}}{b{Cf}}}{{Aj{jJn}}}}{{{b{{n{{D`{A`Fd}}}}}}{b{Cf}}{b{Cf}}Bh}{{Aj{JhJn}}}}{{{b{j}}{b{Cf}}{b{Cf}}{b{Cf}}Bh}{{Aj{fJn}}}}{{{Dn{{Dl{Dj}}}}{b{Cf}}{b{Cf}}}{{Aj{fJn}}}}{{{b{j}}}{{Aj{EjCb}}}}","D":"AHj","p":[[1,"reference"],[5,"Private",765],[1,"unit"],[0,"mut"],[5,"Model",0,766],[6,"Expression",217,767],[5,"Vec",768],[6,"Name",217,769],[5,"DecisionVariable",217,770],[5,"Reduction",0,771],[5,"Rule",0,771],[6,"ApplicationError",0,771],[6,"Result",772],[5,"Metadata",0,773],[5,"RuleSet",0,774],[6,"SolverFamily",0,775],[10,"Deserializer",776],[10,"Serializer",777],[6,"ErrorImpl",777],[1,"bool"],[5,"Error",778],[6,"Error",0,779],[5,"Formatter",780],[5,"Error",780],[5,"Error",781],[5,"Error",782],[1,"str"],[5,"HashSet",783],[6,"Domain",217,784],[6,"Option",785],[1,"u8"],[5,"HashMap",786],[10,"Hasher",787],[5,"SolverFamilyIter",509,775],[5,"SchemaGenerator",788],[6,"Schema",789],[5,"Context",790],[5,"RwLock",791],[5,"Arc",792],[17,"Output"],[1,"fn"],[1,"tuple"],[1,"slice"],[6,"Cow",793],[5,"String",794],[10,"Serializer",795],[10,"Error",796],[5,"TypeId",797],[1,"i32"],[6,"Constant",217,798],[6,"Range",217,784],[10,"Clone",799],[10,"Ord",800],[6,"ReturnType",217,801],[6,"Ordering",800],[10,"Deserialize",776],[10,"PartialEq",800],[10,"Debug",780],[10,"Serialize",795],[6,"Tree",802],[10,"Fn",803],[5,"Box",804],[8,"Result",782],[6,"RewriteError",444,805],[6,"ResolveRulesError",806],[5,"DistributedSlice",490,807],[10,"SolverAdaptor",509,775],[5,"SolverStats",808],[5,"Solver",509,775],[10,"SolverState",690,809],[6,"SolverError",509,775],[5,"Internal",810],[1,"usize"],[5,"ModelLoaded",690,809],[5,"ExecutionSuccess",690,809],[5,"SolveSuccess",509,775],[1,"f64"],[5,"Kissat",634,811],[5,"Minion",634,812],[10,"ModelModifier",665,813],[6,"ModificationFailure",665,813],[6,"EssenceParseError",736],[8,"Result",780],[6,"Value",814],[10,"Eq",800],[10,"Hash",787],[5,"Error",815],[8,"ApplicationResult",0],[6,"SearchStatus",509],[6,"SearchComplete",509],[6,"SearchIncomplete",509],[5,"NotModifiable",665],[5,"ExecutionFailure",690],[5,"Init",690]],"r":[[0,771],[1,771],[4,779],[6,773],[8,766],[13,771],[14,771],[16,774],[18,775],[31,816],[116,817],[117,817],[118,818],[119,818],[120,818],[121,818],[122,818],[137,819],[150,820],[151,820],[152,816],[154,816],[162,816],[224,798],[226,770],[228,784],[230,767],[241,769],[246,784],[248,801],[255,769],[430,821],[442,801],[444,771],[445,771],[449,771],[451,805],[452,771],[454,774],[455,818],[459,822],[464,818],[465,806],[466,818],[467,818],[468,818],[469,818],[470,806],[477,820],[478,820],[479,806],[480,805],[489,822],[490,807],[498,822],[508,823],[522,775],[523,775],[524,775],[525,775],[526,775],[527,775],[528,775],[529,775],[530,775],[531,775],[532,775],[538,775],[588,775],[599,775],[634,811],[635,812],[667,813],[668,813],[669,813],[690,809],[691,809],[692,809],[693,809],[694,809]],"b":[[87,"impl-Debug-for-Error"],[88,"impl-Display-for-Error"],[89,"impl-Debug-for-Metadata"],[90,"impl-Display-for-Metadata"],[92,"impl-Display-for-ApplicationError"],[93,"impl-Debug-for-ApplicationError"],[95,"impl-Debug-for-Rule%3C\'a%3E"],[96,"impl-Display-for-Rule%3C\'a%3E"],[97,"impl-Debug-for-RuleSet%3C\'a%3E"],[98,"impl-Display-for-RuleSet%3C\'a%3E"],[99,"impl-Display-for-SolverFamily"],[100,"impl-Debug-for-SolverFamily"],[101,"impl-From%3CError%3E-for-Error"],[102,"impl-From%3CError%3E-for-Error"],[333,"impl-Display-for-Constant"],[334,"impl-Debug-for-Constant"],[337,"impl-Display-for-Expression"],[338,"impl-Debug-for-Expression"],[339,"impl-Debug-for-Name"],[340,"impl-Display-for-Name"],[342,"impl-Display-for-DecisionVariable"],[343,"impl-Debug-for-DecisionVariable"],[344,"impl-From%3Cbool%3E-for-Constant"],[346,"impl-From%3Ci32%3E-for-Constant"],[349,"impl-From%3Cbool%3E-for-Expression"],[350,"impl-From%3Ci32%3E-for-Expression"],[460,"impl-Display-for-RewriteError"],[461,"impl-Debug-for-RewriteError"],[564,"impl-Display-for-SolverError"],[565,"impl-Debug-for-SolverError"],[741,"impl-Display-for-EssenceParseError"],[742,"impl-Debug-for-EssenceParseError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADgCRwAAAAEAAwAAAAUABQAMAAEAEAAAABIAVQBwAAAAcgAAAHQAAAB9AAIAiAADAI0ABwCZAAkApQAxANwAAwDhAAAA4wAAAOUAAADrAAIA8AAAAPIAAAD3AAAA+QAAAPsAAAD9AAAAAAEAAAIBBwALATMAQAEZAFsBAABeAQEAZAEAAG8BAACEASwAsgEJAL0BAAC/AQAAwwEBAMYBAADIAQYA0AEAANkBAADbAQEA4gEAAOQBBgDsAQcA9gEAAPgBBAD/AQAAAQIMABMCAAAVAgUAHQIZAD8CAABBAgAASQIDAE4CBQBVAgAAVwIAAFkCIQB9AgUAhQICAIoCEAChAgUAqwIHALUCAgC6AgcAzAIcAOoCAADsAgYA9QIIAA=="}],\
["enum_compatability_macro",{"t":"X","n":["document_compatibility"],"q":[[0,"enum_compatability_macro"]],"i":[0],"f":"`","D":"d","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],\
["minion_rs",{"t":"ICCHHPPPPPPPPGPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPPPPFPIIGGIPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNPGPPGPPNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Callback","ast","error","get_from_table","run_minion","Abs","AllDiff","AllDiffMatrix","Bool","Bool","Bound","CheckAssign","CheckGsa","Constant","ConstantAsVar","Constraint","Difference","DisEq","Discrete","Div","DivUndefZero","Element","ElementOne","ElementUndefZero","Eq","ForwardChecking","FrameUpdate","GacAllDiff","GacEq","GacSchema","Gcc","GccWeak","Hamming","Ineq","Integer","LexLeq","LexLeqQuick","LexLeqRv","LexLess","LexLessQuick","LightTable","LitSumGeq","Max","Mddc","Min","MinusEq","Model","Modulo","ModuloUndefZero","NameRef","NegativeMddc","NegativeTable","NotHamming","NvalueGeq","NvalueLeq","Occurrence","OccurrenceGeq","OccurrenceLeq","Pow","Product","Reify","ReifyImply","ReifyImplyQuick","SparseBound","Str2Plus","SumGeq","SumLeq","SymbolTable","Table","Tuple","TwoVars","Var","VarDomain","VarName","WInIntervalSet","WInRange","WInset","WLiteral","WNotInRange","WNotInset","WNotLiteral","WatchElement","WatchElementOne","WatchElementOneUndefZero","WatchElementUndefZero","WatchLess","WatchNeq","WatchSumGeq","WatchSumLeq","WatchVecExistsLess","WatchVecNeq","WatchedAnd","WatchedOr","WeightedSumGeq","WeightedSumLeq","add_var","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","constraints","contains","default","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_variable_order","get_vartype","into","into","into","into","into","into","named_variables","new","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","InvalidInstance","MinionError","NotImplemented","Other","RuntimeError","RuntimeError","UnknownError","borrow","borrow","borrow_mut","borrow_mut","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"minion_rs"],[5,"minion_rs::ast"],[181,"minion_rs::error"],[213,"alloc::string"],[214,"core::option"],[215,"minion_rs::run"],[216,"core::result"],[217,"core::fmt"],[218,"alloc::vec"],[219,"core::any"],[220,"anyhow"],[221,"core::error"],[222,"minion_rs::wrappers"]],"i":[0,0,0,0,0,13,13,13,15,12,12,13,13,0,14,0,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,15,13,13,13,13,13,13,13,13,13,13,13,0,13,13,14,13,13,13,13,13,13,13,13,13,13,13,13,13,12,13,13,13,0,13,0,0,0,0,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,9,3,13,14,15,12,9,3,13,14,15,12,9,3,13,14,15,12,9,3,13,14,15,12,9,3,13,14,15,12,9,3,9,3,3,13,14,15,12,9,3,13,14,15,12,9,3,13,14,15,12,9,9,9,3,13,14,15,12,9,3,3,3,13,14,15,12,9,3,13,14,15,12,9,3,13,14,15,12,9,3,13,14,15,12,9,21,0,6,6,0,6,21,6,21,6,21,21,6,6,21,21,6,6,6,21,21,6,21,6,6,21,6,21,6,21,6,21],"f":"```{b{{d{b}}}}{{fh}{{n{jl}}}}``````````````````````````````````````````````````````````````````````````````````````````{{{Ad{A`Ab}}AfAh}{{d{j}}}}{Ad{{Ad{c}}}{}}00000{{{Ad{A`}}}{{Ad{A`c}}}{}}00000{{{Ad{f}}}f}{{{Ad{Aj}}}Aj}{{{Ad{Al}}}Al}{{{Ad{An}}}An}{{{Ad{Ah}}}Ah}{{{Ad{Ab}}}Ab}{{Ad{Ad{A`c}}}j{}}00000{Adj}00000`{{{Ad{Ab}}Af}B`}{{}f}{{{Ad{f}}{Ad{f}}}B`}{{{Ad{Aj}}{Ad{Aj}}}B`}{{{Ad{Al}}{Ad{Al}}}B`}{{{Ad{An}}{Ad{An}}}B`}{{{Ad{Ah}}{Ad{Ah}}}B`}{{{Ad{Ab}}{Ad{Ab}}}B`}{{{Ad{f}}{Ad{A`Bb}}}Bd}{{{Ad{Aj}}{Ad{A`Bb}}}Bd}{{{Ad{Al}}{Ad{A`Bb}}}Bd}{{{Ad{An}}{Ad{A`Bb}}}Bd}{{{Ad{Ah}}{Ad{A`Bb}}}Bd}{{{Ad{Ab}}{Ad{A`Bb}}}Bd}{cc{}}00000{{{Ad{Ab}}}{{Bf{Af}}}}{{{Ad{Ab}}Af}{{d{Ah}}}}{{}c{}}00000`{{}f}{Adc{}}00000{c{{n{e}}}{}{}}00000{{}{{n{c}}}{}}00000{AdBh}00000```````{Ad{{Ad{c}}}{}}0{{{Ad{A`}}}{{Ad{A`c}}}{}}0{{{Ad{Bj}}{Ad{Bj}}}B`}{{{Ad{l}}{Ad{A`Bb}}}Bd}0{{{Ad{Bj}}{Ad{A`Bb}}}Bd}0={Bll}{Bjl}{BnBj}{cc{}}>>{{{Ad{l}}}{{d{{Ad{C`}}}}}}{Adb}0==<<;;","D":"Dn","p":[[5,"String",213],[6,"Option",214],[5,"Model",5],[8,"Callback",0,215],[1,"unit"],[6,"MinionError",181],[6,"Result",216],[0,"mut"],[5,"SymbolTable",5],[1,"reference"],[8,"VarName",5],[6,"VarDomain",5],[6,"Constraint",5],[6,"Var",5],[6,"Constant",5],[1,"bool"],[5,"Formatter",217],[8,"Result",217],[5,"Vec",218],[5,"TypeId",219],[6,"RuntimeError",181],[5,"Error",220],[1,"u32"],[10,"Error",221]],"r":[[0,215],[3,222],[4,215]],"b":[[193,"impl-Debug-for-MinionError"],[194,"impl-Display-for-MinionError"],[195,"impl-Display-for-RuntimeError"],[196,"impl-Debug-for-RuntimeError"],[198,"impl-From%3CError%3E-for-MinionError"],[199,"impl-From%3CRuntimeError%3E-for-MinionError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAK4ADAAGAAcADwAAABEAHQAwABMARQACAEoAFQBhACwAnAAAAJ4AFwC9AAgAxwACAM0ACAA="}],\
["uniplate",{"t":"PPGPCNNNNNNNNNNNNNNNNCNKEKMNNNNNNNNMNNNKGPNNNNNNNNNNNNNNNNNMNNN","n":["Many","One","Tree","Zero","biplate","borrow","borrow_mut","clone","clone_into","clone_to_uninit","eq","fmt","from","into","into_iter","list","map","to_owned","try_from","try_into","type_id","uniplate","vzip","Biplate","Tree","Uniplate","biplate","cata","children","children_bi","descend","descend_bi","rewrite","transform","transform_bi","uniplate","universe","universe_bi","with_children","Uniplate","UniplateError","WrongNumberOfChildren","borrow","borrow_mut","children","descend","eq","fmt","fmt","fold","from","into","one_holed_context","rewrite","to_string","transform","try_from","try_into","type_id","uniplate","universe","vzip","with_children"],"q":[[0,"uniplate"],[23,"uniplate::biplate"],[39,"uniplate::uniplate"],[63,"uniplate::tree"],[64,"core::clone"],[65,"core::marker"],[66,"core::cmp"],[67,"core::fmt"],[68,"im::vector"],[69,"core::ops::function"],[70,"alloc::boxed"],[71,"alloc::sync"],[72,"core::result"],[73,"core::any"],[74,"alloc::vec"],[75,"core::option"],[76,"alloc::string"]],"i":[3,3,0,3,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,0,0,0,20,21,21,20,21,20,21,21,20,21,21,20,21,0,0,26,26,26,22,22,26,26,26,22,26,26,22,22,26,22,26,26,26,22,22,26,22],"f":"`````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{{f{c}}}}}{{f{c}}}{hjhl}}{{b{b{dc}}}n{}}{bn}{{{b{{f{c}}}}{b{{f{c}}}}}A`{Abjhl}}{{{b{{f{c}}}}{b{dAd}}}Af{Ahjhl}}{cc{}}{{}c{}}{{{f{c}}}e{jhl}{}}{{{f{c}}}{{B`{{Aj{c}}{An{Al}}}}}{jhl}}{{{f{c}}{Bb{Al}}}{{f{c}}}{jhl}}{bc{}}{c{{Bd{e}}}{}{}}{{}{{Bd{c}}}{}}{bBf}`7```{{{b{Bh}}}{{B`{{f{c}}{An{Al}}}}}{jhlBj}}{{{b{Bj}}{Bb{Al}}}c{}}{{{b{Bj}}}{{Aj{Bj}}}}{{{b{Bh}}}{{Aj{c}}}{jhlBj}}{{{b{Bj}}{Bb{Al}}}Bj}{{{b{Bh}}{Bb{Al}}}Bh}110{{{b{Bj}}}{{B`{{f{Bj}}{An{Al}}}}}}43{{{b{Bj}}{Aj{Bj}}}Bj}```{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{Bl}}}{{Bn{Bl}}}}{{{b{Bl}}{Cb{Bl}{{C`{Bl}}}}}{{Bd{BlCd}}}}{{{b{Cd}}{b{Cd}}}A`}{{{b{Cd}}{b{dAd}}}Af}0{{{b{Bl}}{Cb{Bl{Bn{c}}}{{C`{c}}}}}c{}}{cc{}}{{}c{}}{{{b{Bl}}Cf}{{Ch{{An{Al}}}}}}{{{b{Bl}}{Cb{Bl}{{C`{{Ch{Bl}}}}}}}{{Bd{BlCd}}}}{bCj}8{c{{Bd{e}}}{}{}}{{}{{Bd{c}}}{}}{bBf}{{{b{Bl}}}{{B`{{Bn{Bl}}{An{Al}}}}}}=7{{{b{Bl}}{Bn{Bl}}}{{Bd{BlCd}}}}","D":"C`","p":[[1,"reference"],[0,"mut"],[6,"Tree",0,63],[10,"Clone",64],[10,"Sized",65],[10,"Eq",66],[1,"unit"],[1,"bool"],[10,"PartialEq",66],[5,"Formatter",67],[8,"Result",67],[10,"Debug",67],[5,"Vector",68],[10,"Fn",69],[5,"Box",70],[1,"tuple"],[5,"Arc",71],[6,"Result",72],[5,"TypeId",73],[10,"Biplate",23],[10,"Uniplate",23],[10,"Uniplate",39],[5,"Vec",74],[17,"Output"],[1,"fn"],[6,"UniplateError",39],[1,"usize"],[6,"Option",75],[5,"String",76]],"r":[[2,63],[24,63]],"b":[[47,"impl-Debug-for-UniplateError"],[48,"impl-Display-for-UniplateError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACcACwABAAsADwAAABEACQAfAAAAIwABACYAAAAoAAQALwACADcAAAA5AAIAPgAAAA=="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
